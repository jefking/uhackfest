{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "batchAccountName": {
      "type": "string",
      "metadata": {
        "description": "Batch Account Name"
      }
    },
    "storageAccountsku": {
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS"
      ],
      "type": "string",
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "lowPriorityNodes": {
      "defaultValue": 0,
      "minValue": 0,
      "maxValue": 1000,
      "type": "int",
      "metadata": {
        "description": "Number of VM's to allocate"
      }
    },
    "batchVMSku": {
      "defaultValue": "standard_d2_v2",
      "type": "string",
      "metadata": {
        "description": "Azure Batch VM size (pool)"
      }
    },
    "eventGridTopicName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Event Grid custom topic."
      }
    },
    "eventGridSubscriptionName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Event Grid custom topic's subscription."
      }
    },
    "siteName": {
      "type": "string",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    }
  },
  "variables": {
    "vhdStorage": "[concat('vhds', uniqueString(resourceGroup().id))]",
    "rawStorage": "[concat('raw', uniqueString(resourceGroup().id))]",
    "l0Storage": "[concat('l0', uniqueString(resourceGroup().id))]",
    "l1Storage": "[concat('l1', uniqueString(resourceGroup().id))]",
    "functionStorage": "[concat('function', uniqueString(parameters('siteName')))]",
    "location": "[resourceGroup().location]",
    "batchname": "[concat('batch-', uniqueString(resourceGroup().id))]",
    "repoUrl": "https://github.com/jefking/func-create-job",
    "branch": "master"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "[parameters('storageAccountsku')]"
      },
      "kind": "Storage",
      "name": "[variables('vhdStorage')]",
      "apiVersion": "2016-01-01",
      "location": "[variables('location')]",
      "tags": {
        "ObjectName": "[variables('vhdStorage')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "[parameters('storageAccountsku')]"
      },
      "kind": "Storage",
      "name": "[variables('rawStorage')]",
      "apiVersion": "2016-01-01",
      "location": "[variables('location')]",
      "tags": {
        "ObjectName": "[variables('rawStorage')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "[parameters('storageAccountsku')]"
      },
      "kind": "Storage",
      "name": "[variables('l0Storage')]",
      "apiVersion": "2016-01-01",
      "location": "[variables('location')]",
      "tags": {
        "ObjectName": "[variables('l0Storage')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "[parameters('storageAccountsku')]"
      },
      "kind": "Storage",
      "name": "[variables('l1Storage')]",
      "apiVersion": "2016-01-01",
      "location": "[variables('location')]",
      "tags": {
        "ObjectName": "[variables('l1Storage')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "[parameters('storageAccountsku')]"
      },
      "kind": "Storage",
      "name": "[variables('functionStorage')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "ObjectName": "[variables('functionStorage')]"
      }
    },
    {
      "apiVersion": "2016-03-01",
      "name": "[parameters('siteName')]",
      "type": "Microsoft.Web/sites",
      "properties": {
        "name": "[parameters('siteName')]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('functionStorage'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('functionStorage')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('functionStorage'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('functionStorage')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('functionStorage'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('functionStorage')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~1"
            },
            {
              "name": "ROUTING_EXTENSION_VERSION",
              "value": "~0.1"
            }
          ]
        },
        "clientAffinityEnabled": false
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]"
          ],
          "properties": {
            "RepoUrl": "[variables('repoURL')]",
            "branch": "[variables('branch')]",
            "IsManualIntegration": true
          }
        }
      ],
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('functionStorage'))]"
      ],
      "location": "[resourceGroup().location]",
      "kind": "functionapp"
    },
    {
      "type": "Microsoft.Batch/batchAccounts",
      "name": "[parameters('batchAccountName')]",
      "apiVersion": "2015-12-01",
      "location": "[variables('location')]",
      "tags": {
        "ObjectName": "[parameters('batchAccountName')]"
      },
      "properties": {
        "autoStorage": {
          "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('vhdStorage'))]"
        }
      },
      "resources": [
        {
          "type": "pools",
          "name": "[concat(variables('batchname'),'batchpool')]",
          "apiVersion": "2017-09-01",
          "properties": {
            "displayName": "[parameters('batchAccountName')] Batch service",
            "vmSize": "[parameters('batchVMSku')]",
            "scaleSettings": {
              "fixedScale": {
                "resizeTimeout": "PT15M",
                "targetDedicatedNodes": 0,
                "targetLowPriorityNodes": "[parameters('lowPriorityNodes')]"
              },
              "autoScale": null
            },
            "maxTasksPerNode": 1,
            "deploymentConfiguration": {
              "virtualMachineConfiguration": {
                "imageReference": {
                  "publisher": "Canonical",
                  "offer": "UbuntuServer",
                  "sku": "16.04-LTS",
                  "version": "latest",
                  "id": null
                },
                "nodeAgentSkuId": "batch.node.ubuntu 16.04"
              }
            },
            "applicationLicenses": null
          },
          "dependsOn": [
            "[resourceId('Microsoft.Batch/batchAccounts', parameters('batchAccountName'))]"
          ]
        }
      ],
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('rawStorage'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/providers/eventSubscriptions",
      "name": "[concat(variables('rawStorage'), '/Microsoft.EventGrid/', parameters('eventGridSubscriptionName'))]",
      "apiVersion": "2018-01-01",
      "properties": {
        "destination": {
          "endpointType": "WebHook",
          "properties": {
            "endpointUrl": "[concat('https://',reference(resourceId('Microsoft.Web/sites', parameters('siteName'))).hostNames[0],'api/hook')]"
          }
        },
        "filter": {
          "subjectBeginsWith": "",
          "subjectEndsWith": "",
          "isSubjectCaseSensitive": false,
          "includedEventTypes": [
            "All"
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('rawStorage'))]",
        "[concat('https://',reference(resourceId('Microsoft.Web/sites', parameters('siteName'))).hostNames[0])]",
        "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]"
      ]
    }
  ]
}